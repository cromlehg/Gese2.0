# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET    /                                                        controllers.AppController.index

#GET    /dev/status                                   controllers.AppController.status


GET    /dev/balances/list/page/:pageId                          controllers.sside.BalancesController.balances(pageId: Long)

# Admin

GET    /app/admin                                               controllers.sside.AdminController.admin()

GET    /app/admin/stats                                         controllers.sside.AdminController.adminStats()

GET    /app/admin/charge                                        controllers.sside.AdminController.charge

+ nocsrf
POST   /app/admin/charge                                        controllers.sside.AdminController.chargeProcess

GET    /app/admin/options                                       controllers.sside.AdminController.adminOptions()

GET    /app/admin/posts/page/:pageId                            controllers.sside.AdminController.adminPosts(pageId: Int)

GET    /app/admin/moderateposts/page/:pageId                    controllers.sside.AdminController.adminModeratePosts(pageId: Int)

GET    /app/admin/posts/post/moderate/:moderateStatus/:postId   controllers.sside.AdminController.moderatePost(postId: Long, moderateStatus: Int)

GET    /app/admin/posts/post/remove/:postId                     controllers.sside.AdminController.removePost(postId: Long)

GET    /app/admin/accounts/page/:pageId                         controllers.sside.AdminController.adminAccounts(pageId: Int, filter: Option[String])

GET    /app/admin/accounts/account/:accountId/setstatus/:status            controllers.sside.AdminController.setStatus(accountId: Long, status: Int)

+      nocsrf                                                                                                                                                                                                                                                                                                                                               
POST   /app/admin/options/switchBooleanOption                   controllers.sside.AdminController.switchBooleanOption()

GET    /app/admin/login                                         controllers.sside.AdminController.adminLogin()

GET    /app/admin/logout                                        controllers.sside.AdminController.adminLogout()
 
+ nocsrf
POST   /app/admin/login                                         controllers.sside.AdminController.adminLoginProcess() 


GET    /app/posts/list/filter/:filter/page/:pageId              controllers.sside.PostsController.postsByFilter(pageId: Long, filter: String)

GET    /app/posts/list/filter/page/:pageId                      controllers.sside.PostsController.posts(pageId: Long)

GET    /app/posts/post/:postId                                  controllers.sside.PostsController.viewPost(postId: Long)

GET    /app/login                                               controllers.sside.AccountsController.login()

+ nocsrf
POST   /app/login                                               controllers.sside.AccountsController.processLogin()

GET    /app/profile/:accountId/blog/:pageId                     controllers.sside.AccountsController.blog(accountId: Long, pageId: Long)

GET    /app/profile/:accountId                                  controllers.sside.AccountsController.blogTarget(accountId: Long)

GET    /app/register/company                                    controllers.sside.AccountsController.registerCompany()

GET    /app/register/user                                       controllers.sside.AccountsController.registerUser()

+ nocsrf
POST   /app/register/company                                    controllers.sside.AccountsController.registerProcessCompany()

+ nocsrf
POST   /app/register/user                                       controllers.sside.AccountsController.registerProcessUser()

GET    /app/register/approve/:login/:code                       controllers.sside.AccountsController.approveRegister(login: String, code: String)

+ nocsrf
POST   /app/register/approve                                    controllers.sside.AccountsController.processApproveRegister()

+ nocsrf
POST   /api/v1                                                  controllers.APIv1.api

# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                                            controllers.Assets.versioned(path="/public", file: Asset)
